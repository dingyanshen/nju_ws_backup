// Generated by gencpp from file dobot/ThrowService.msg
// DO NOT EDIT!


#ifndef DOBOT_MESSAGE_THROWSERVICE_H
#define DOBOT_MESSAGE_THROWSERVICE_H

#include <ros/service_traits.h>


#include <dobot/ThrowServiceRequest.h>
#include <dobot/ThrowServiceResponse.h>


namespace dobot
{

struct ThrowService
{

typedef ThrowServiceRequest Request;
typedef ThrowServiceResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct ThrowService
} // namespace dobot


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::dobot::ThrowService > {
  static const char* value()
  {
    return "b5ca28a4c733f2992478f530e3af3cbb";
  }

  static const char* value(const ::dobot::ThrowService&) { return value(); }
};

template<>
struct DataType< ::dobot::ThrowService > {
  static const char* value()
  {
    return "dobot/ThrowService";
  }

  static const char* value(const ::dobot::ThrowService&) { return value(); }
};


// service_traits::MD5Sum< ::dobot::ThrowServiceRequest> should match 
// service_traits::MD5Sum< ::dobot::ThrowService > 
template<>
struct MD5Sum< ::dobot::ThrowServiceRequest>
{
  static const char* value()
  {
    return MD5Sum< ::dobot::ThrowService >::value();
  }
  static const char* value(const ::dobot::ThrowServiceRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::dobot::ThrowServiceRequest> should match 
// service_traits::DataType< ::dobot::ThrowService > 
template<>
struct DataType< ::dobot::ThrowServiceRequest>
{
  static const char* value()
  {
    return DataType< ::dobot::ThrowService >::value();
  }
  static const char* value(const ::dobot::ThrowServiceRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::dobot::ThrowServiceResponse> should match 
// service_traits::MD5Sum< ::dobot::ThrowService > 
template<>
struct MD5Sum< ::dobot::ThrowServiceResponse>
{
  static const char* value()
  {
    return MD5Sum< ::dobot::ThrowService >::value();
  }
  static const char* value(const ::dobot::ThrowServiceResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::dobot::ThrowServiceResponse> should match 
// service_traits::DataType< ::dobot::ThrowService > 
template<>
struct DataType< ::dobot::ThrowServiceResponse>
{
  static const char* value()
  {
    return DataType< ::dobot::ThrowService >::value();
  }
  static const char* value(const ::dobot::ThrowServiceResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // DOBOT_MESSAGE_THROWSERVICE_H
