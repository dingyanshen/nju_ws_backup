// Generated by gencpp from file camera/PhotoService.msg
// DO NOT EDIT!


#ifndef CAMERA_MESSAGE_PHOTOSERVICE_H
#define CAMERA_MESSAGE_PHOTOSERVICE_H

#include <ros/service_traits.h>


#include <camera/PhotoServiceRequest.h>
#include <camera/PhotoServiceResponse.h>


namespace camera
{

struct PhotoService
{

typedef PhotoServiceRequest Request;
typedef PhotoServiceResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct PhotoService
} // namespace camera


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::camera::PhotoService > {
  static const char* value()
  {
    return "117e6535d65959983e49d94959e9d276";
  }

  static const char* value(const ::camera::PhotoService&) { return value(); }
};

template<>
struct DataType< ::camera::PhotoService > {
  static const char* value()
  {
    return "camera/PhotoService";
  }

  static const char* value(const ::camera::PhotoService&) { return value(); }
};


// service_traits::MD5Sum< ::camera::PhotoServiceRequest> should match 
// service_traits::MD5Sum< ::camera::PhotoService > 
template<>
struct MD5Sum< ::camera::PhotoServiceRequest>
{
  static const char* value()
  {
    return MD5Sum< ::camera::PhotoService >::value();
  }
  static const char* value(const ::camera::PhotoServiceRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::camera::PhotoServiceRequest> should match 
// service_traits::DataType< ::camera::PhotoService > 
template<>
struct DataType< ::camera::PhotoServiceRequest>
{
  static const char* value()
  {
    return DataType< ::camera::PhotoService >::value();
  }
  static const char* value(const ::camera::PhotoServiceRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::camera::PhotoServiceResponse> should match 
// service_traits::MD5Sum< ::camera::PhotoService > 
template<>
struct MD5Sum< ::camera::PhotoServiceResponse>
{
  static const char* value()
  {
    return MD5Sum< ::camera::PhotoService >::value();
  }
  static const char* value(const ::camera::PhotoServiceResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::camera::PhotoServiceResponse> should match 
// service_traits::DataType< ::camera::PhotoService > 
template<>
struct DataType< ::camera::PhotoServiceResponse>
{
  static const char* value()
  {
    return DataType< ::camera::PhotoService >::value();
  }
  static const char* value(const ::camera::PhotoServiceResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // CAMERA_MESSAGE_PHOTOSERVICE_H
